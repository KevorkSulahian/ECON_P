{
    "collab_server" : "",
    "contents" : "library(stringr)\nlibrary(utf8)\nlibrary(ggplot2)\nlibrary(shiny)\nlibrary(shinyjs)\nlibrary(shinydashboard)\nlibrary(rsconnect)\nrunApp(\n  list(\n    ui = dashboardPage(\n      dashboardHeader(),\n      dashboardSidebar( fileInput('file1', 'Choose xlsx file',\n                                  accept = c(\".xlsx\")),\n                        selectInput('Exp_imp','Export or Import',\n                                    choices = c(\"Export\",\"Import\"))),\n      dashboardBody(\n      # fluidRow(\n      # tags$hr(),\n      plotOutput(\"graph\")\n      # )\n    ))\n    ,\n    server = shinyServer(function(input, output) {\n      \n      my_data <- reactive({\n        \n        inFile <- input$file1\n        \n        if (is.null(inFile))\n          return(NULL)\n        df  <- readxl::read_xlsx(inFile1$datapath, sheet = 1, col_names = TRUE) #Reading the file\n        colnames(df) <-c(\"Name\", \"Price\",\"Growth\")\n        df$Price <- as.numeric(df$Price)\n        df$Growth <- as.numeric(df$Growth)\n        df <- df[!(df$Price<0),]\n        df$Price <- as.numeric(df$Price)\n        df<-df[order(df$Price),]\n        df$Price <- round(df$Price, 1)\n        \n        df$Name <- trimws(df$Name)\n\n        df$Name <-as.factor(df$Name)\n\n        df$Name <- factor(df$Name,levels= df$Name)\n        df$Growth <- as.numeric(df$Growth)\n        \n        \n        df$Price <- round(as.numeric(df$Price),1)\n        return(df)\n      })\n      \n      # output$contents <- renderTable({\n      #   \n      #   my_data()\n      # })\n      \n      output$graph <- renderPlot({\n        inFile <- input$file1\n        if (is.null(inFile))\n          return(NULL)\n        df <- my_data()\n        if (input$Exp_imp == \"Export\"){\n          ggplot(df,aes(x=df$Name))  +\n            geom_bar(aes(y=df$Price),stat=\"identity\", fill='#042900',alpha=1) +\n            geom_bar(aes(y=(df$Price - df$Growth)),stat=\"identity\", fill=\"#03561C\",alpha=0.5 ,\n                     size=ifelse(df$Growth<0,1,0)) +\n            geom_text(aes(label=ifelse(df$Growth<0,paste0(Price,\" (↓)\"),paste0(Price,\" (↑)\")),\n                          y=ifelse(df$Growth<0, Price-Growth, Price)),hjust= -0.5, color= ifelse(df$Growth<0,\"Red\",\"DarkGreen\"), size=5,fontface=\"bold\")+\n            scale_y_continuous(breaks = seq(0,max(df$Price)+50,50), limits = c(0, max(df$Price)+50))+\n            theme_minimal() +\n            theme(\n              plot.title = element_blank(),\n              axis.title.x = element_blank(),\n              axis.title.y = element_blank(),\n              axis.text.y = element_text(size=18,face=\"bold\"),\n              axis.text.x = element_text(size=12,face=\"bold\"))  +\n            coord_flip()\n        }\n        else {\n          ggplot(df,aes(x=df$Name))  +\n            geom_bar(aes(y=df$Price),stat=\"identity\", fill='#186866',alpha=1) +\n            geom_bar(aes(y=(df$Price - df$Growth)),stat=\"identity\", fill=\"#16D1CC\",alpha=0.25 ,\n                     size=ifelse(df$Growth<0,1,0)) +\n            geom_text(aes(label=ifelse(df$Growth<0,paste0(Price,\" (↓)\"),paste0(Price,\" (↑)\")),\n                          y=ifelse(df$Growth<0, Price-Growth, Price)),hjust= -0.5, color= ifelse(df$Growth<0,\"Red\",\"#186866\"), size=5,fontface = \"bold\")+\n            scale_y_continuous(breaks = seq(0,max(df$Price)+50,50), limits = c(0, max(df$Price)+50))+\n            theme_minimal() +\n            theme(\n              plot.title = element_blank(),\n              axis.title.x = element_blank(),\n              axis.title.y = element_blank(),\n              axis.text.y = element_text(size=18,face=\"bold\"),\n              axis.text.x = element_text(size=12,face=\"bold\"))  +\n            coord_flip()\n        }\n        \n      })\n      \n    })\n  ))\n\n",
    "created" : 1538664184596.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3304657379",
    "id" : "79240F06",
    "lastKnownWriteTime" : 1538664241,
    "last_content_update" : 1538664241466,
    "path" : "~/Desktop/Min Economy/Plots/Shiny_App_Barplot.R",
    "project_path" : "Shiny_App_Barplot.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}