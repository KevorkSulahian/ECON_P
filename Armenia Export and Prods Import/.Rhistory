ID[is.na(ID)] <- 0
ID[,no_data] = 0
char_cols <-c('Code','Product label')
ID[,!(names(ID) %in% char_cols)] <- apply(ID[,!(names(ID) %in% char_cols)], 2, as.numeric)
ID$EEU <- rowSums(ID[, eeu])
ID$EU <- rowSums(ID[, eu])
ID$Arabic <- rowSums(ID[,Arabic])
ID_GR <- ID[,c("Code","Product label","Armenia", "EEU","EU","Arabic")]
part1 <- ID_GR
part1[,!(names(part1) %in% char_cols)]<- apply(ID[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
View(part1)
6043/348320196
part1 <- ID_GR
part1[,!(names(part1) %in% char_cols)]<- apply(ID[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
View(part1)
part1 <- part1[order(part1$Code),]
View(part1)
View(ID_GR)
View(part1)
View(main)
View(ID_GR)
View(part1)
View(part1)
for_main = getwd()
main1  <- readxl::read_xlsx("Trade_Map_-_List_of_exported_products_for_the_selected_product_(All_products).xlsx",
sheet = "Trade_Map_-_List_of_exported_pr", col_names = TRUE) #Reading the file
colnames(main1)<- c('col1','col2')
main1 <- main1[-c(1:8),]
main1$col1 <- substring(main1$col1,2)
ID <- as.data.frame(cbind(main1$col1,main1$col2),stringsAsFactors = FALSE)
colnames(ID) <- c("Code",'Product label')
ID$Code <- as.character(ID$Code)
main <- ID
main[1,]<-c(NA, "TCI")
setwd("countries")
files=list.files(pattern=".xlsx")
setwd(for_main)
years <- c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017")
idx <- ID
eeu <- c("Russian Federation","Belarus","Kazakhstan", "Kyrgyzstan")
eu <- c("Bulgaria", "Germany", "Netherlands", "Belgium","Italy","Poland",
"United Kingdom","France","Romania","Czech Republic","Lithuania",
"Austria","Finland","Spain","Hungary","Luxembourg","Sweden","Denmark",
"Greece","Cyprus","Slovakia","Croatia","Slovenia","Ireland")
Arabic <- c("Iraq","United Arab Emirates","Qatar","Libya, State of",
"Saudi Arabia","Yemen","Lebanon","Kuwait","Egypt")
year="2008"
ID <- idx
no_data = c()
for (i in 1:length(files)){
path = files[i]
country <-  readxl::read_xlsx(paste0("countries/",path),  sheet = 1,
col_names = FALSE)
country_name <- as.character(country[1, 'X__1'])
country_name <- substring(country_name,30)
# if (country_name == 'Armenia'){
#   print(i)
# }
country <- country[complete.cases(country$X__2),]
colnames(country) <- unlist(country[country$X__1 =='Code',])
colnames(country) <- as.character(unlist(country[1,]))
country = country[-1, ]
country$Code <- substring(country$Code,2)
cols <- colnames(country)
name <- cols[grep(year, cols)]
if (length(name)!=0){
test <- country[,c('Code',name)]
colnames(test) <- c('Code',country_name )
}
else {
test <- country[,'Code']
test[country_name]=''
no_data = c(no_data,country_name)
}
test$Code <- as.character(test$Code)
ID <- left_join(ID,test,by='Code')
}
ID[is.na(ID)] <- 0
ID[,no_data] = 0
char_cols <-c('Code','Product label')
ID[,!(names(ID) %in% char_cols)] <- apply(ID[,!(names(ID) %in% char_cols)], 2, as.numeric)
ID$EEU <- rowSums(ID[, eeu])
ID$EU <- rowSums(ID[, eu])
ID$Arabic <- rowSums(ID[,Arabic])
ID_GR <- ID[,c("Code","Product label","Armenia", "EEU","EU","Arabic")]
View(ID_GR)
part1 <- ID_GR
x <- apply(ID[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
View(x)
x <- apply(ID[,!(names(part1) %in% char_cols)], 2, function(x) max(x))
x
part1[,!(names(part1) %in% char_cols)]<- apply(part1[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
View(part1)
library(dplyr)
library(writexl)
library(stringr)
library(data.table)
for_main = getwd()
main1  <- readxl::read_xlsx("Trade_Map_-_List_of_exported_products_for_the_selected_product_(All_products).xlsx",
sheet = "Trade_Map_-_List_of_exported_pr", col_names = TRUE) #Reading the file
colnames(main1)<- c('col1','col2')
main1 <- main1[-c(1:8),]
main1$col1 <- substring(main1$col1,2)
ID <- as.data.frame(cbind(main1$col1,main1$col2),stringsAsFactors = FALSE)
colnames(ID) <- c("Code",'Product label')
ID$Code <- as.character(ID$Code)
#####
main <- ID
main[1,]<-c(NA, "TCI")
###
setwd("countries")
files=list.files(pattern=".xlsx")
setwd(for_main)
years <- c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017")
idx <- ID
eeu <- c("Russian Federation","Belarus","Kazakhstan", "Kyrgyzstan")
eu <- c("Bulgaria", "Germany", "Netherlands", "Belgium","Italy","Poland",
"United Kingdom","France","Romania","Czech Republic","Lithuania",
"Austria","Finland","Spain","Hungary","Luxembourg","Sweden","Denmark",
"Greece","Cyprus","Slovakia","Croatia","Slovenia","Ireland")
Arabic <- c("Iraq","United Arab Emirates","Qatar","Libya, State of",
"Saudi Arabia","Yemen","Lebanon","Kuwait","Egypt")
options(scipen = 999)
for (year in years){
ID <- idx
no_data = c()
for (i in 1:length(files)){
path = files[i]
country <-  readxl::read_xlsx(paste0("countries/",path),  sheet = 1,
col_names = FALSE)
country_name <- as.character(country[1, 'X__1'])
country_name <- substring(country_name,30)
# if (country_name == 'Armenia'){
#   print(i)
# }
country <- country[complete.cases(country$X__2),]
colnames(country) <- unlist(country[country$X__1 =='Code',])
colnames(country) <- as.character(unlist(country[1,]))
country = country[-1, ]
country$Code <- substring(country$Code,2)
cols <- colnames(country)
name <- cols[grep(year, cols)]
if (length(name)!=0){
test <- country[,c('Code',name)]
colnames(test) <- c('Code',country_name )
}
else {
test <- country[,'Code']
test[country_name]=''
no_data = c(no_data,country_name)
}
test$Code <- as.character(test$Code)
ID <- left_join(ID,test,by='Code')
}
ID[is.na(ID)] <- 0
ID[,no_data] = 0
char_cols <-c('Code','Product label')
ID[,!(names(ID) %in% char_cols)] <- apply(ID[,!(names(ID) %in% char_cols)], 2, as.numeric)
ID$EEU <- rowSums(ID[, eeu])
ID$EU <- rowSums(ID[, eu])
ID$Arabic <- rowSums(ID[,Arabic])
ID_GR <- ID[,c("Code","Product label","Armenia", "EEU","EU","Arabic")]
part1 <- ID_GR
part1[,!(names(part1) %in% char_cols)]<- apply(part1[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
part1 <- part1[-1,]
part1 <- part1[order(part1$Code),]
part2<-part1
part2[,!(names(part2) %in% char_cols)] <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) abs(x-part1$Armenia)/2)
TCIS <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) (1-sum(x))*100)
tc <- data.frame(TCIS)
tr_tc <- transpose(data.frame(TCIS))
colnames(tr_tc)<-rownames(tc)
tr_tc['Product label'] <- "TCI"
tr_tc$Code <- NA
test3 <- rbind(tr_tc, part2)
ord_col <- colnames(part1)
test3 <- test3[,ord_col]
colnames(test3) <- c("Code","Product label","Armenia",paste0(ord_col[-c(1:3)],".",year))
test3$Armenia <- NULL
main <- left_join(main,test3,by=c('Code','Product label'))
}
main <- main[order(main$Code),]
ID_GR <- ID_GR[order(ID_GR$Code),]
ID <- ID[order(ID$Code),]
write_xlsx(main, "TCI_Group.xlsx")
head(ID[,eeu])
View(main)
library(dplyr)
library(writexl)
library(stringr)
library(data.table)
for_main = getwd()
main1  <- readxl::read_xlsx("Trade_Map_-_List_of_exported_products_for_the_selected_product_(All_products).xlsx",
sheet = "Trade_Map_-_List_of_exported_pr", col_names = TRUE) #Reading the file
colnames(main1)<- c('col1','col2')
main1 <- main1[-c(1:8),]
main1$col1 <- substring(main1$col1,2)
ID <- as.data.frame(cbind(main1$col1,main1$col2),stringsAsFactors = FALSE)
colnames(ID) <- c("Code",'Product label')
ID$Code <- as.character(ID$Code)
#####
main <- ID
main[1,]<-c(NA, "TCI")
###
setwd("countries")
files=list.files(pattern=".xlsx")
setwd(for_main)
years <- c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017")
idx <- ID
eeu <- c("Russian Federation","Belarus","Kazakhstan", "Kyrgyzstan")
eu <- c("Bulgaria", "Germany", "Netherlands", "Belgium","Italy","Poland",
"United Kingdom","France","Romania","Czech Republic","Lithuania",
"Austria","Finland","Spain","Hungary","Luxembourg","Sweden","Denmark",
"Greece","Cyprus","Slovakia","Croatia","Slovenia","Ireland")
Arabic <- c("Iraq","United Arab Emirates","Qatar","Libya, State of",
"Saudi Arabia","Yemen","Lebanon","Kuwait","Egypt")
options(scipen = 999)
for (year in years){
ID <- idx
no_data = c()
for (i in 1:length(files)){
path = files[i]
country <-  readxl::read_xlsx(paste0("countries/",path),  sheet = 1,
col_names = FALSE)
country_name <- as.character(country[1, 'X__1'])
country_name <- substring(country_name,30)
# if (country_name == 'Armenia'){
#   print(i)
# }
country <- country[complete.cases(country$X__2),]
colnames(country) <- unlist(country[country$X__1 =='Code',])
colnames(country) <- as.character(unlist(country[1,]))
country = country[-1, ]
country$Code <- substring(country$Code,2)
cols <- colnames(country)
name <- cols[grep(year, cols)]
if (length(name)!=0){
test <- country[,c('Code',name)]
colnames(test) <- c('Code',country_name )
}
else {
test <- country[,'Code']
test[country_name]=''
no_data = c(no_data,country_name)
}
test$Code <- as.character(test$Code)
ID <- left_join(ID,test,by='Code')
}
ID[is.na(ID)] <- 0
ID[,no_data] = 0
char_cols <-c('Code','Product label')
ID[,!(names(ID) %in% char_cols)] <- apply(ID[,!(names(ID) %in% char_cols)], 2, as.numeric)
ID$EEU <- rowSums(ID[, eeu])
ID$EU <- rowSums(ID[, eu])
ID$Arabic <- rowSums(ID[,Arabic])
ID_GR <- ID[,c("Code","Product label","Armenia", "EEU","EU","Arabic")]
part1 <- ID_GR
part1[,!(names(part1) %in% char_cols)]<- apply(part1[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
part1 <- part1[-1,]
part1 <- part1[order(part1$Code),]
part2<-part1
part2[,!(names(part2) %in% char_cols)] <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) abs(x-part1$Armenia)/2)
TCIS <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) (1-sum(x))*100)
tc <- data.frame(TCIS)
tr_tc <- transpose(data.frame(TCIS))
colnames(tr_tc)<-rownames(tc)
tr_tc['Product label'] <- "TCI"
tr_tc$Code <- NA
test3 <- rbind(tr_tc, part2)
ord_col <- colnames(part1)
test3 <- test3[,ord_col]
colnames(test3) <- c("Code","Product label","Armenia",paste0(ord_col[-c(1:3)],".",year))
test3$Armenia <- NULL
main <- left_join(main,test3,by=c('Code','Product label'))
}
# main <- main[order(main$Code),]
# ID_GR <- ID_GR[order(ID_GR$Code),]
# ID <- ID[order(ID$Code),]
write_xlsx(main, "TCI_Group.xlsx")
head(ID[,eeu])
View(main)
getwd()
library(stringr)
library(utf8)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(rsconnect)
library(dplyr)
library(writexl)
library(data.table)
main  <- readxl::read_xlsx("Trade_Map_-_List_of_exported_products_for_the_selected_product_(All_products).xlsx",
sheet = "Trade_Map_-_List_of_exported_pr", col_names = TRUE) #Reading the file
View(main)
colnames(main)<- c('col1','col2')
main <- main[-c(1:8),]
main$col1 <- substring(main$col1,2)
ID <- as.data.frame(cbind(main$col1,main$col2))
colnames(ID) <- c("Code",'Product label')
ID$Code <- as.character(ID$Code)
setwd("countries")
files=list.files(pattern=".xlsx")
setwd(for_main)
Year=input$year
Year = 2008
#Year = 2008
no_data = c()
for (i in 1:length(files)){
path = files[i]
country <-  readxl::read_xlsx(paste0("countries/",path),  sheet = 1,
col_names = FALSE)
country_name <- as.character(country[1, 'X__1'])
country_name <- substring(country_name,30)
# if (country_name == 'Armenia'){
#   print(i)
# }
country <- country[complete.cases(country$X__2),]
colnames(country) <- unlist(country[country$X__1 =='Code',])
colnames(country) <- as.character(unlist(country[1,]))
country = country[-1, ]
country$Code <- substring(country$Code,2)
cols <- colnames(country)
name <- cols[grep(Year, cols)]
if (length(name)!=0){
test <- country[,c('Code',name)]
colnames(test) <- c('Code',country_name )
}
else {
test <- country[,'Code']
test[country_name]=''
no_data = c(no_data,country_name)
}
test$Code <- as.character(test$Code)
ID <- left_join(ID,test,by='Code')
}
getwd()
for (i in 1:length(files)){
path = files[i]
country <-  readxl::read_xlsx(paste0("",path),  sheet = 1, # put countries/ back in
col_names = FALSE)
country_name <- as.character(country[1, 'X__1'])
country_name <- substring(country_name,30)
# if (country_name == 'Armenia'){
#   print(i)
# }
country <- country[complete.cases(country$X__2),]
colnames(country) <- unlist(country[country$X__1 =='Code',])
colnames(country) <- as.character(unlist(country[1,]))
country = country[-1, ]
country$Code <- substring(country$Code,2)
cols <- colnames(country)
name <- cols[grep(Year, cols)]
if (length(name)!=0){
test <- country[,c('Code',name)]
colnames(test) <- c('Code',country_name )
}
else {
test <- country[,'Code']
test[country_name]=''
no_data = c(no_data,country_name)
}
test$Code <- as.character(test$Code)
ID <- left_join(ID,test,by='Code')
}
ID[is.na(ID)] <- 0
ID[,no_data] = '-'
char_cols <-c(no_data,'Code','Product label')
ID[,!(names(ID) %in% char_cols)] <- apply(ID[,!(names(ID) %in% char_cols)], 2, as.numeric)
options(scipen=999)
part1 <- ID
part1[,!(names(part1) %in% char_cols)]<- apply(part1[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
part1 <- part1[-1,]
part1 <- part1[order(part1$Code),]
test <- abs(part1$Argentina- part1$Armenia)/2
part2<-part1
part2[,!(names(part2) %in% char_cols)] <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) abs(x-part1$Armenia)/2)
TCIS <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) (1-sum(x))*100)
tc <- data.frame(TCIS)
tr_tc <- transpose(data.frame(TCIS))
colnames(tr_tc)<-rownames(tc)
tr_tc['Product label'] <- "TCI"
tr_tc$Code <- NA
tr_tc[no_data] = NA
test3 <- rbind(tr_tc, part2)
ord_col <- colnames(part1)
test3 <- test3[,ord_col]
test3$Armenia <- NULL
return (test3)
View(test3)
View(part2)
library(stringr)
library(utf8)
library(ggplot2)
library(shiny)
library(shinydashboard)
library(rsconnect)
library(dplyr)
library(writexl)
library(dplyr)
library(writexl)
library(stringr)
library(data.table)
runApp(
list(
ui = dashboardPage(
dashboardHeader(),
dashboardSidebar(
selectInput(inputId = "year",label="Choose year",
choices=c("2008","2009","2010","2011","2012","2013","2014","2015","2016","2017")),
actionButton(
inputId = "submit_loc",
label = "Submit"
),
br(),
br(),
downloadButton("downloadData", "Download",class="butt1")
# tags$head(tags$style(".butt1{background-color:blue;} .butt1{color: black;} .butt1{font-family: Courier New} ,butt1{align: center}"))
),
dashboardBody(
# fluidRow(
# tags$hr(),
dataTableOutput("table")
))
,
server = shinyServer(function(input, output,session) {
my_data <- reactive({
main  <- readxl::read_xlsx("Trade_Map_-_List_of_exported_products_for_the_selected_product_(All_products).xlsx",
sheet = "Trade_Map_-_List_of_exported_pr", col_names = TRUE) #Reading the file
colnames(main)<- c('col1','col2')
main <- main[-c(1:8),]
main$col1 <- substring(main$col1,2)
ID <- as.data.frame(cbind(main$col1,main$col2))
colnames(ID) <- c("Code",'Product label')
ID$Code <- as.character(ID$Code)
setwd("countries")
files=list.files(pattern=".xlsx")
setwd(for_main)
Year=input$year
#Year = 2008
no_data = c()
for (i in 1:length(files)){
path = files[i]
country <-  readxl::read_xlsx(paste0("",path),  sheet = 1, # put countries/ back in
col_names = FALSE)
country_name <- as.character(country[1, 'X__1'])
country_name <- substring(country_name,30)
# if (country_name == 'Armenia'){
#   print(i)
# }
country <- country[complete.cases(country$X__2),]
colnames(country) <- unlist(country[country$X__1 =='Code',])
colnames(country) <- as.character(unlist(country[1,]))
country = country[-1, ]
country$Code <- substring(country$Code,2)
cols <- colnames(country)
name <- cols[grep(Year, cols)]
if (length(name)!=0){
test <- country[,c('Code',name)]
colnames(test) <- c('Code',country_name )
}
else {
test <- country[,'Code']
test[country_name]=''
no_data = c(no_data,country_name)
}
test$Code <- as.character(test$Code)
ID <- left_join(ID,test,by='Code')
}
ID[is.na(ID)] <- 0
ID[,no_data] = '-'
char_cols <-c(no_data,'Code','Product label')
ID[,!(names(ID) %in% char_cols)] <- apply(ID[,!(names(ID) %in% char_cols)], 2, as.numeric)
options(scipen=999)
part1 <- ID
part1[,!(names(part1) %in% char_cols)]<- apply(part1[,!(names(part1) %in% char_cols)], 2, function(x) x/max(x))
part1 <- part1[-1,]
part1 <- part1[order(part1$Code),]
test <- abs(part1$Argentina- part1$Armenia)/2
part2<-part1
part2[,!(names(part2) %in% char_cols)] <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) abs(x-part1$Armenia)/2)
TCIS <- apply(part2[,!(names(part2) %in% char_cols)],2,function(x) (1-sum(x))*100)
tc <- data.frame(TCIS)
tr_tc <- transpose(data.frame(TCIS))
colnames(tr_tc)<-rownames(tc)
tr_tc['Product label'] <- "TCI"
tr_tc$Code <- NA
tr_tc[no_data] = NA
test3 <- rbind(tr_tc, part2)
ord_col <- colnames(part1)
test3 <- test3[,ord_col]
test3$Armenia <- NULL
return (test3)
})
observeEvent(
eventExpr = input[["submit_loc"]],
handlerExpr = {
output$table <- renderDataTable({
my_data()
}) })
output$downloadData <- downloadHandler(
filename = function() {
("untitled.xlsx")
},
content = function(file) {
write_xlsx(my_data(), file)
}
)
})
))
getwd()
getwd()
getwd()
